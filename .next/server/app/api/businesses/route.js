/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/businesses/route";
exports.ids = ["app/api/businesses/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbusinesses%2Froute&page=%2Fapi%2Fbusinesses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbusinesses%2Froute.ts&appDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=fra1&preferredRegion=arn1&preferredRegion=cdg1&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbusinesses%2Froute&page=%2Fapi%2Fbusinesses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbusinesses%2Froute.ts&appDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=fra1&preferredRegion=arn1&preferredRegion=cdg1&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_christianwang_Desktop_allvitr_hugin_src_app_api_businesses_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/businesses/route.ts */ \"(rsc)/./src/app/api/businesses/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_christianwang_Desktop_allvitr_hugin_src_app_api_businesses_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\n_Users_christianwang_Desktop_allvitr_hugin_src_app_api_businesses_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/businesses/route\",\n        pathname: \"/api/businesses\",\n        filename: \"route\",\n        bundlePath: \"app/api/businesses/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/christianwang/Desktop/allvitr/hugin/src/app/api/businesses/route.ts\",\n    nextConfigOutput,\n    userland: _Users_christianwang_Desktop_allvitr_hugin_src_app_api_businesses_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/businesses/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbusinesses%2Froute&page=%2Fapi%2Fbusinesses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbusinesses%2Froute.ts&appDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=fra1&preferredRegion=arn1&preferredRegion=cdg1&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/businesses/route.ts":
/*!*****************************************!*\
  !*** ./src/app/api/businesses/route.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   maxDuration: () => (/* binding */ maxDuration),\n/* harmony export */   preferredRegion: () => (/* binding */ preferredRegion),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/api-cache */ \"(rsc)/./src/lib/api-cache.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_db__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_db__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst runtime = 'nodejs';\nconst dynamic = 'force-dynamic';\nconst maxDuration = 30;\nconst preferredRegion = [\n    'fra1',\n    'arn1',\n    'cdg1'\n];\n\n\nasync function GET(req) {\n    if (!_lib_db__WEBPACK_IMPORTED_MODULE_1__.dbConfigured) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Database not configured'\n        }, {\n            status: 503\n        });\n    }\n    const { searchParams } = new URL(req.url);\n    const source = 'general';\n    const offset = Math.max(0, parseInt(searchParams.get('offset') || '0', 10) || 0);\n    const skipCount = [\n        '1',\n        'true'\n    ].includes((searchParams.get('skipCount') || '').toLowerCase());\n    const countOnly = [\n        '1',\n        'true'\n    ].includes((searchParams.get('countOnly') || '').toLowerCase());\n    const singleIndustry = searchParams.get('industry')?.trim() || '';\n    const industries = [\n        ...searchParams.getAll('industries').map((s)=>s.trim()).filter(Boolean),\n        singleIndustry || undefined\n    ].filter(Boolean);\n    // Revenue filtering\n    const revenueRange = searchParams.get('revenueRange')?.trim();\n    let revenueClause = '';\n    let revenueParams = [];\n    if (revenueRange) {\n        switch(revenueRange){\n            case '0-1M':\n                revenueClause = 'AND f.revenue >= $REVENUE_MIN AND f.revenue < $REVENUE_MAX';\n                revenueParams = [\n                    0,\n                    1000000\n                ];\n                break;\n            case '1M-10M':\n                revenueClause = 'AND f.revenue >= $REVENUE_MIN AND f.revenue < $REVENUE_MAX';\n                revenueParams = [\n                    1000000,\n                    10000000\n                ];\n                break;\n            case '10M-100M':\n                revenueClause = 'AND f.revenue >= $REVENUE_MIN AND f.revenue < $REVENUE_MAX';\n                revenueParams = [\n                    10000000,\n                    100000000\n                ];\n                break;\n            case '100M+':\n                revenueClause = 'AND f.revenue >= $REVENUE_MIN';\n                revenueParams = [\n                    100000000\n                ];\n                break;\n        }\n    }\n    // Removed recommendation and score filtering\n    // Events filtering: events=with|without\n    const eventsFilter = searchParams.get('events')?.trim().toLowerCase();\n    const withEvents = eventsFilter === 'with';\n    const withoutEvents = eventsFilter === 'without';\n    // Advanced event type filtering and weighting\n    const eventTypesCsv = (searchParams.get('eventTypes') || '').trim();\n    const eventTypes = eventTypesCsv ? eventTypesCsv.split(',').map((s)=>s.trim()).filter(Boolean) : [];\n    // eventWeights is a JSON string mapping type -> weight between -10 and 10\n    let eventWeights = {};\n    const eventWeightsRaw = searchParams.get('eventWeights');\n    if (eventWeightsRaw) {\n        try {\n            const parsed = JSON.parse(eventWeightsRaw);\n            if (parsed && typeof parsed === 'object') {\n                for (const [k, v] of Object.entries(parsed)){\n                    const num = Number(v);\n                    if (!Number.isNaN(num)) {\n                        // clamp to [-10, 10]\n                        eventWeights[k] = Math.max(-10, Math.min(10, num));\n                    }\n                }\n            }\n        } catch  {\n            // ignore malformed input\n            eventWeights = {};\n        }\n    }\n    // Sorting\n    const sortBy = searchParams.get('sortBy')?.trim() || 'updatedAt';\n    const allowedSorts = [\n        'updatedAt',\n        'name',\n        'revenue',\n        'employees',\n        // new: score sorting\n        'scoreAsc',\n        'scoreDesc'\n    ];\n    let validSortBy = allowedSorts.includes(sortBy) ? sortBy : 'updatedAt';\n    // Disable score sorting when no event types are selected\n    if ((validSortBy === 'scoreAsc' || validSortBy === 'scoreDesc') && eventTypes.length === 0) {\n        console.log(`[businesses] Score sorting disabled - no event types selected, falling back to updatedAt`);\n        validSortBy = 'updatedAt';\n    }\n    // Debug: Log all requests with their parameters\n    const sortByParam = searchParams.get('sortBy')?.trim() || 'updatedAt';\n    console.log(`[businesses] REQUEST: source=${source}, sortBy=${sortByParam}, validSortBy=${validSortBy}, eventsFilter=${eventsFilter}, eventTypes=${JSON.stringify(eventTypes)}, URL=${req.url}`);\n    const isCsvSource = false;\n    // Create cache key from request parameters\n    const cacheParams = {\n        source,\n        offset,\n        skipCount,\n        countOnly,\n        industries: industries.sort(),\n        revenueRange,\n        eventsFilter: eventsFilter || '',\n        eventTypes: eventTypes,\n        eventWeights,\n        sortBy: validSortBy\n    };\n    // Check cache first\n    const shouldCache = true;\n    if (shouldCache) {\n        const cached = _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.get(cacheParams);\n        if (cached) {\n            console.log(`[businesses] CACHE HIT for sortBy=${validSortBy}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(cached);\n        } else {\n            console.log(`[businesses] CACHE MISS for sortBy=${validSortBy}`);\n        }\n    }\n    const hasIndustries = industries.length > 0;\n    const industryParams = industries.map((v)=>`%${v}%`);\n    const perColumnClause = (col)=>industries.length > 0 ? industries.map((_, i)=>`${col} ILIKE $${i + 1}`).join(' OR ') : '';\n    const industryClause = hasIndustries ? `AND ((${perColumnClause('b.\"industryCode1\"')} ) OR (${perColumnClause('b.\"industryText1\"')}) OR (${perColumnClause('b.\"industryCode2\"')}) OR (${perColumnClause('b.\"industryText2\"')}) OR (${perColumnClause('b.\"industryCode3\"')}) OR (${perColumnClause('b.\"industryText3\"')}))` : '';\n    // Combine all params - industries first, then revenue (we'll append event params below)\n    const params = [\n        ...industryParams,\n        ...revenueParams\n    ];\n    // Update clause placeholders with actual parameter positions\n    if (revenueClause) {\n        const revenueStartIndex = industryParams.length + 1;\n        revenueClause = revenueClause.replace('$REVENUE_MIN', `$${revenueStartIndex}`).replace('$REVENUE_MAX', `$${revenueStartIndex + 1}`);\n    }\n    // Optimized query structure\n    const baseWhere = `\n\t\tWHERE (b.\"registeredInForetaksregisteret\" = true OR b.\"orgFormCode\" IN ('AS','ASA','ENK','ANS','DA','NUF','SA','SAS','A/S','A/S/ASA'))\n\t\t${industryClause}\n\t`;\n    // Compute parameter indexes for optional event filters/weights\n    const eventTypesIdx = eventTypes.length > 0 ? params.length + 1 : null;\n    if (eventTypesIdx) {\n        params.push(eventTypes);\n        console.log(`[businesses] Adding eventTypes filter: ${JSON.stringify(eventTypes)} at index ${eventTypesIdx}`);\n        console.log(`[businesses] Full params array: ${JSON.stringify(params)}`);\n    }\n    const hasWeights = Object.keys(eventWeights).length > 0;\n    const weightsIdx = hasWeights ? params.length + 1 : null;\n    if (weightsIdx) params.push(JSON.stringify(eventWeights));\n    // Always join the latest financials so revenue is available for display and sorting\n    const itemsSql = `\n    SELECT\n      b.\"orgNumber\",\n      b.name,\n      b.website,\n      b.employees,\n      b.\"addressStreet\",\n      b.\"addressPostalCode\",\n      b.\"addressCity\",\n      ${isCsvSource ? 'NULL' : `(SELECT c.\"fullName\" \n       FROM \"CEO\" c \n       WHERE c.\"businessId\" = b.id \n       ORDER BY c.\"fromDate\" DESC NULLS LAST \n       LIMIT 1)`} as \"ceo\",\n      b.\"industryCode1\",\n      b.\"industryText1\",\n      b.\"industryCode2\",\n      b.\"industryText2\",\n      b.\"industryCode3\",\n      b.\"industryText3\",\n      b.\"vatRegistered\",\n      b.\"vatRegisteredDate\",\n      b.\"sectorCode\",\n      b.\"sectorText\",\n      b.\"orgFormCode\",\n      b.\"orgFormText\",\n      b.\"registeredInForetaksregisteret\",\n      b.\"isBankrupt\",\n      b.\"isUnderLiquidation\",\n      b.\"isUnderCompulsory\",\n      b.\"createdAt\",\n      b.\"updatedAt\",\n\t\t\tfLatest.\"fiscalYear\" as \"fiscalYear\",\n      fLatest.revenue as revenue,\n      fLatest.profit as profit,\n      fLatest.\"totalAssets\" as \"totalAssets\",\n      fLatest.equity as equity,\n\t\t\tfLatest.\"employeesAvg\" as \"employeesAvg\",\n      /* Raw and weighted event scores for sorting */\n      evRaw.\"eventScore\",\n      ${hasWeights ? 'evScore.\"eventWeightedScore\"' : 'NULL::int as \"eventWeightedScore\"'},\n\t\t\tEXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\") as \"hasEvents\"\n\t\tFROM \"Business\" b\n    LEFT JOIN LATERAL (\n      SELECT f.\"fiscalYear\", f.revenue, f.profit, f.\"totalAssets\", f.equity, f.\"employeesAvg\"\n      FROM \"FinancialReport\" f\n      WHERE f.\"businessId\" = b.id\n      ORDER BY f.\"fiscalYear\" DESC NULLS LAST\n      LIMIT 1\n    ) fLatest ON TRUE\n    LEFT JOIN LATERAL (\n      SELECT COALESCE(SUM(evr.score), 0) AS \"eventScore\"\n      FROM public.events_public evr\n      WHERE evr.org_number = b.\"orgNumber\"\n      ${eventTypesIdx ? `AND evr.event_type = ANY($${eventTypesIdx}::text[])` : ''}\n      -- Debug: eventTypesIdx=${eventTypesIdx}, eventTypes=${JSON.stringify(eventTypes)}\n    ) evRaw ON TRUE\n    ${hasWeights ? `LEFT JOIN LATERAL (\n      SELECT COALESCE(SUM(\n        COALESCE(NULLIF(($${weightsIdx}::jsonb ->> ev.event_type), '')::int, 0)\n        * COALESCE(ev.score, 0)\n      ), 0) AS \"eventWeightedScore\"\n      FROM public.events_public ev\n      WHERE ev.org_number = b.\"orgNumber\"\n      ${eventTypesIdx ? `AND ev.event_type = ANY($${eventTypesIdx}::text[])` : ''}\n    ) evScore ON TRUE` : ''}\n    ${baseWhere}\n    ${revenueClause ? revenueClause.replace(/\\bf\\./g, 'fLatest.') : ''}\n    ${(()=>{\n        const conditions = [];\n        // Event existence filtering\n        if (withoutEvents) {\n            conditions.push('NOT EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\")');\n        } else if (withEvents || eventTypesIdx) {\n            // If \"with events\" is selected OR specific event types are selected, only show companies with events\n            if (eventTypesIdx) {\n                // Only companies with the specific event types\n                conditions.push(`EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\" AND e.event_type = ANY($${eventTypesIdx}::text[]))`);\n            } else {\n                // Only companies with any events\n                conditions.push('EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\")');\n            }\n        }\n        return conditions.length > 0 ? 'AND ' + conditions.join(' AND ') : '';\n    })()}\n    ORDER BY ${(()=>{\n        switch(validSortBy){\n            case 'name':\n                return 'b.name ASC';\n            case 'revenue':\n                return 'fLatest.revenue DESC NULLS LAST';\n            case 'employees':\n                return 'b.employees DESC NULLS LAST';\n            case 'scoreAsc':\n                // Always prefer weighted score when event types are selected, as that's what frontend displays\n                return `${hasWeights && eventTypes.length > 0 ? 'evScore.\"eventWeightedScore\" ASC NULLS FIRST' : 'evRaw.\"eventScore\" ASC NULLS FIRST'}`;\n            case 'scoreDesc':\n                return `${hasWeights && eventTypes.length > 0 ? 'evScore.\"eventWeightedScore\" DESC NULLS LAST' : 'evRaw.\"eventWeightedScore\" DESC NULLS LAST'}`;\n            default:\n                return 'b.\"updatedAt\" DESC';\n        }\n    })()}\n    LIMIT 100 OFFSET ${offset}\n  `;\n    const countSql = `\n    SELECT COUNT(*)::int as total\n    FROM \"Business\" b\n    LEFT JOIN LATERAL (\n      SELECT f.\"fiscalYear\", f.revenue\n      FROM \"FinancialReport\" f\n      WHERE f.\"businessId\" = b.id\n      ORDER BY f.\"fiscalYear\" DESC NULLS LAST\n      LIMIT 1\n    ) fLatest ON TRUE\n    ${baseWhere}\n    ${revenueClause ? revenueClause.replace(/\\bf\\./g, 'fLatest.') : ''}\n    ${(()=>{\n        const conditions = [];\n        // Event existence filtering\n        if (withoutEvents) {\n            conditions.push('NOT EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\")');\n        } else if (withEvents || eventTypesIdx) {\n            // If \"with events\" is selected OR specific event types are selected, only show companies with events\n            if (eventTypesIdx) {\n                // Only companies with the specific event types\n                conditions.push(`EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\" AND e.event_type = ANY($${eventTypesIdx}::text[]))`);\n            } else {\n                // Only companies with any events\n                conditions.push('EXISTS (SELECT 1 FROM public.events_public e WHERE e.org_number = b.\"orgNumber\")');\n            }\n        }\n        return conditions.length > 0 ? 'AND ' + conditions.join(' AND ') : '';\n    })()}\n  `;\n    let itemsRes = {\n        rows: []\n    };\n    let total = 0;\n    let grandTotal = 0;\n    if (countOnly) {\n        const start = Date.now();\n        try {\n            const countRes = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(countSql, params);\n            console.log(`[businesses] Count query took ${Date.now() - start}ms`);\n            total = countRes.rows?.[0]?.total ?? 0;\n        } catch (error) {\n            console.error(`[businesses] Count query failed:`, error);\n            console.error(`[businesses] Count query was:`, countSql);\n            console.error(`[businesses] Params:`, params);\n            throw error;\n        }\n        // Also fetch the unfiltered grand total (with lightweight caching via apiCache)\n        try {\n            const gtCacheKey = {\n                metric: 'grandTotalBusinesses'\n            };\n            const cachedGT = _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.get(gtCacheKey);\n            if (cachedGT) {\n                grandTotal = cachedGT.total;\n            } else {\n                const gtRes = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)('SELECT COUNT(*)::int as total FROM \"Business\"');\n                grandTotal = gtRes.rows?.[0]?.total ?? 0;\n                _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.set(gtCacheKey, {\n                    total: grandTotal\n                }, 2 * 60 * 1000); // cache 2 minutes\n            }\n        } catch (error) {\n            console.error('[businesses] Grand total query failed:', error);\n        }\n    } else {\n        // Normal item fetch always needed\n        const start = Date.now();\n        try {\n            itemsRes = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(itemsSql, params);\n            console.log(`[businesses] Items query took ${Date.now() - start}ms (revenue: ${!!revenueClause}) - ${itemsRes.rows.length} rows returned for sortBy=${validSortBy}, source=${source}`);\n        } catch (error) {\n            console.error(`[businesses] Items query failed:`, error);\n            console.error(`[businesses] Query was:`, itemsSql);\n            console.error(`[businesses] Params:`, params);\n            throw error;\n        }\n        if (!skipCount) {\n            const countStart = Date.now();\n            try {\n                const countRes = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(countSql, params);\n                console.log(`[businesses] Count query took ${Date.now() - countStart}ms`);\n                total = countRes.rows?.[0]?.total ?? 0;\n            } catch (error) {\n                console.error(`[businesses] Count query failed:`, error);\n                console.error(`[businesses] Count query was:`, countSql);\n                console.error(`[businesses] Params:`, params);\n                throw error;\n            }\n        }\n        // Fetch unfiltered grand total once per request (from cache if available)\n        try {\n            const gtCacheKey = {\n                metric: 'grandTotalBusinesses'\n            };\n            const cachedGT = _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.get(gtCacheKey);\n            if (cachedGT) {\n                grandTotal = cachedGT.total;\n            } else {\n                const gtRes = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)('SELECT COUNT(*)::int as total FROM \"Business\"');\n                grandTotal = gtRes.rows?.[0]?.total ?? 0;\n                _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.set(gtCacheKey, {\n                    total: grandTotal\n                }, 2 * 60 * 1000);\n            }\n        } catch (error) {\n            console.error('[businesses] Grand total query failed:', error);\n        }\n    }\n    const filteredItems = itemsRes.rows;\n    if (countOnly) {\n        const countResponse = {\n            items: [],\n            total,\n            grandTotal\n        };\n        // Cache count-only responses\n        if (shouldCache) {\n            _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.set(cacheParams, countResponse, 30 * 1000); // 30s cache for counts\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(countResponse);\n    }\n    const response = {\n        items: filteredItems,\n        total,\n        grandTotal\n    };\n    // Cache the response for future requests\n    if (shouldCache) {\n        _lib_api_cache__WEBPACK_IMPORTED_MODULE_2__.apiCache.set(cacheParams, response, 2 * 60 * 1000); // 2min cache\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/businesses/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/api-cache.ts":
/*!******************************!*\
  !*** ./src/lib/api-cache.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiCache: () => (/* binding */ apiCache)\n/* harmony export */ });\nclass ApiCache {\n    generateKey(params) {\n        // Sort keys for consistent cache keys\n        const sortedParams = Object.keys(params).sort().reduce((acc, key)=>{\n            acc[key] = params[key];\n            return acc;\n        }, {});\n        return JSON.stringify(sortedParams);\n    }\n    isExpired(entry) {\n        return Date.now() - entry.timestamp > entry.ttl;\n    }\n    get(params) {\n        const key = this.generateKey(params);\n        const entry = this.cache.get(key);\n        if (!entry) return null;\n        if (this.isExpired(entry)) {\n            this.cache.delete(key);\n            return null;\n        }\n        return entry.data;\n    }\n    set(params, data, customTtl) {\n        const key = this.generateKey(params);\n        const ttl = customTtl || this.DEFAULT_TTL;\n        this.cache.set(key, {\n            data,\n            timestamp: Date.now(),\n            ttl\n        });\n    }\n    // Clear cache entries that match a pattern (useful when data changes)\n    invalidatePattern(pattern) {\n        const patternStr = JSON.stringify(pattern);\n        const keysToDelete = Array.from(this.cache.keys()).filter((key)=>key.includes(patternStr.slice(1, -1)));\n        keysToDelete.forEach((key)=>this.cache.delete(key));\n    }\n    // Clear all cache\n    clear() {\n        this.cache.clear();\n    }\n    // Get cache stats\n    getStats() {\n        return {\n            size: this.cache.size,\n            entries: Array.from(this.cache.keys())\n        };\n    }\n    // Clean expired entries\n    cleanup() {\n        const now = Date.now();\n        for (const [key, entry] of this.cache.entries()){\n            if (now - entry.timestamp > entry.ttl) {\n                this.cache.delete(key);\n            }\n        }\n    }\n    constructor(){\n        this.cache = new Map();\n        this.DEFAULT_TTL = 2 * 60 * 1000; // 2 minutes\n    }\n}\n// Singleton instance\nconst apiCache = new ApiCache();\n// Auto-cleanup every 5 minutes\nif (typeof setInterval !== 'undefined') {\n    setInterval(()=>{\n        apiCache.cleanup();\n    }, 5 * 60 * 1000);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2FwaS1jYWNoZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBTUEsTUFBTUE7SUFJSUMsWUFBWUMsTUFBK0IsRUFBVTtRQUMzRCxzQ0FBc0M7UUFDdEMsTUFBTUMsZUFBZUMsT0FBT0MsSUFBSSxDQUFDSCxRQUM5QkksSUFBSSxHQUNKQyxNQUFNLENBQ0wsQ0FBQ0MsS0FBS0M7WUFDSkQsR0FBRyxDQUFDQyxJQUFJLEdBQUdQLE1BQU0sQ0FBQ08sSUFBSTtZQUN0QixPQUFPRDtRQUNULEdBQ0EsQ0FBQztRQUdMLE9BQU9FLEtBQUtDLFNBQVMsQ0FBQ1I7SUFDeEI7SUFFUVMsVUFBVUMsS0FBMEIsRUFBVztRQUNyRCxPQUFPQyxLQUFLQyxHQUFHLEtBQUtGLE1BQU1HLFNBQVMsR0FBR0gsTUFBTUksR0FBRztJQUNqRDtJQUVBQyxJQUFPaEIsTUFBK0IsRUFBWTtRQUNoRCxNQUFNTyxNQUFNLElBQUksQ0FBQ1IsV0FBVyxDQUFDQztRQUM3QixNQUFNVyxRQUFRLElBQUksQ0FBQ00sS0FBSyxDQUFDRCxHQUFHLENBQUNUO1FBRTdCLElBQUksQ0FBQ0ksT0FBTyxPQUFPO1FBRW5CLElBQUksSUFBSSxDQUFDRCxTQUFTLENBQUNDLFFBQVE7WUFDekIsSUFBSSxDQUFDTSxLQUFLLENBQUNDLE1BQU0sQ0FBQ1g7WUFDbEIsT0FBTztRQUNUO1FBRUEsT0FBT0ksTUFBTVEsSUFBSTtJQUNuQjtJQUVBQyxJQUFPcEIsTUFBK0IsRUFBRW1CLElBQU8sRUFBRUUsU0FBa0IsRUFBUTtRQUN6RSxNQUFNZCxNQUFNLElBQUksQ0FBQ1IsV0FBVyxDQUFDQztRQUM3QixNQUFNZSxNQUFNTSxhQUFhLElBQUksQ0FBQ0MsV0FBVztRQUV6QyxJQUFJLENBQUNMLEtBQUssQ0FBQ0csR0FBRyxDQUFDYixLQUFLO1lBQ2xCWTtZQUNBTCxXQUFXRixLQUFLQyxHQUFHO1lBQ25CRTtRQUNGO0lBQ0Y7SUFFQSxzRUFBc0U7SUFDdEVRLGtCQUFrQkMsT0FBeUMsRUFBUTtRQUNqRSxNQUFNQyxhQUFhakIsS0FBS0MsU0FBUyxDQUFDZTtRQUNsQyxNQUFNRSxlQUFlQyxNQUFNQyxJQUFJLENBQUMsSUFBSSxDQUFDWCxLQUFLLENBQUNkLElBQUksSUFBSTBCLE1BQU0sQ0FDdkQsQ0FBQ3RCLE1BQVFBLElBQUl1QixRQUFRLENBQUNMLFdBQVdNLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFHN0NMLGFBQWFNLE9BQU8sQ0FBQyxDQUFDekIsTUFBUSxJQUFJLENBQUNVLEtBQUssQ0FBQ0MsTUFBTSxDQUFDWDtJQUNsRDtJQUVBLGtCQUFrQjtJQUNsQjBCLFFBQWM7UUFDWixJQUFJLENBQUNoQixLQUFLLENBQUNnQixLQUFLO0lBQ2xCO0lBRUEsa0JBQWtCO0lBQ2xCQyxXQUFnRDtRQUM5QyxPQUFPO1lBQ0xDLE1BQU0sSUFBSSxDQUFDbEIsS0FBSyxDQUFDa0IsSUFBSTtZQUNyQkMsU0FBU1QsTUFBTUMsSUFBSSxDQUFDLElBQUksQ0FBQ1gsS0FBSyxDQUFDZCxJQUFJO1FBQ3JDO0lBQ0Y7SUFFQSx3QkFBd0I7SUFDeEJrQyxVQUFnQjtRQUNkLE1BQU14QixNQUFNRCxLQUFLQyxHQUFHO1FBQ3BCLEtBQUssTUFBTSxDQUFDTixLQUFLSSxNQUFNLElBQUksSUFBSSxDQUFDTSxLQUFLLENBQUNtQixPQUFPLEdBQUk7WUFDL0MsSUFBSXZCLE1BQU1GLE1BQU1HLFNBQVMsR0FBR0gsTUFBTUksR0FBRyxFQUFFO2dCQUNyQyxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsTUFBTSxDQUFDWDtZQUNwQjtRQUNGO0lBQ0Y7O2FBOUVRVSxRQUFRLElBQUlxQjthQUNIaEIsY0FBYyxJQUFJLEtBQUssTUFBSyxZQUFZOztBQThFM0Q7QUFFQSxxQkFBcUI7QUFDZCxNQUFNaUIsV0FBVyxJQUFJekMsV0FBVTtBQUV0QywrQkFBK0I7QUFDL0IsSUFBSSxPQUFPMEMsZ0JBQWdCLGFBQWE7SUFDdENBLFlBQ0U7UUFDRUQsU0FBU0YsT0FBTztJQUNsQixHQUNBLElBQUksS0FBSztBQUViIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXN0aWFud2FuZy9EZXNrdG9wL2FsbHZpdHIvaHVnaW4vc3JjL2xpYi9hcGktY2FjaGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsidHlwZSBDYWNoZUVudHJ5PFQ+ID0ge1xuICBkYXRhOiBUXG4gIHRpbWVzdGFtcDogbnVtYmVyXG4gIHR0bDogbnVtYmVyXG59XG5cbmNsYXNzIEFwaUNhY2hlIHtcbiAgcHJpdmF0ZSBjYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCBDYWNoZUVudHJ5PHVua25vd24+PigpXG4gIHByaXZhdGUgcmVhZG9ubHkgREVGQVVMVF9UVEwgPSAyICogNjAgKiAxMDAwIC8vIDIgbWludXRlc1xuXG4gIHByaXZhdGUgZ2VuZXJhdGVLZXkocGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IHN0cmluZyB7XG4gICAgLy8gU29ydCBrZXlzIGZvciBjb25zaXN0ZW50IGNhY2hlIGtleXNcbiAgICBjb25zdCBzb3J0ZWRQYXJhbXMgPSBPYmplY3Qua2V5cyhwYXJhbXMpXG4gICAgICAuc29ydCgpXG4gICAgICAucmVkdWNlKFxuICAgICAgICAoYWNjLCBrZXkpID0+IHtcbiAgICAgICAgICBhY2Nba2V5XSA9IHBhcmFtc1trZXldXG4gICAgICAgICAgcmV0dXJuIGFjY1xuICAgICAgICB9LFxuICAgICAgICB7fSBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPixcbiAgICAgIClcblxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzb3J0ZWRQYXJhbXMpXG4gIH1cblxuICBwcml2YXRlIGlzRXhwaXJlZChlbnRyeTogQ2FjaGVFbnRyeTx1bmtub3duPik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBEYXRlLm5vdygpIC0gZW50cnkudGltZXN0YW1wID4gZW50cnkudHRsXG4gIH1cblxuICBnZXQ8VD4ocGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IFQgfCBudWxsIHtcbiAgICBjb25zdCBrZXkgPSB0aGlzLmdlbmVyYXRlS2V5KHBhcmFtcylcbiAgICBjb25zdCBlbnRyeSA9IHRoaXMuY2FjaGUuZ2V0KGtleSlcblxuICAgIGlmICghZW50cnkpIHJldHVybiBudWxsXG5cbiAgICBpZiAodGhpcy5pc0V4cGlyZWQoZW50cnkpKSB7XG4gICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIHJldHVybiBlbnRyeS5kYXRhIGFzIFRcbiAgfVxuXG4gIHNldDxUPihwYXJhbXM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+LCBkYXRhOiBULCBjdXN0b21UdGw/OiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zdCBrZXkgPSB0aGlzLmdlbmVyYXRlS2V5KHBhcmFtcylcbiAgICBjb25zdCB0dGwgPSBjdXN0b21UdGwgfHwgdGhpcy5ERUZBVUxUX1RUTFxuXG4gICAgdGhpcy5jYWNoZS5zZXQoa2V5LCB7XG4gICAgICBkYXRhLFxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxuICAgICAgdHRsLFxuICAgIH0pXG4gIH1cblxuICAvLyBDbGVhciBjYWNoZSBlbnRyaWVzIHRoYXQgbWF0Y2ggYSBwYXR0ZXJuICh1c2VmdWwgd2hlbiBkYXRhIGNoYW5nZXMpXG4gIGludmFsaWRhdGVQYXR0ZXJuKHBhdHRlcm46IFBhcnRpYWw8UmVjb3JkPHN0cmluZywgdW5rbm93bj4+KTogdm9pZCB7XG4gICAgY29uc3QgcGF0dGVyblN0ciA9IEpTT04uc3RyaW5naWZ5KHBhdHRlcm4pXG4gICAgY29uc3Qga2V5c1RvRGVsZXRlID0gQXJyYXkuZnJvbSh0aGlzLmNhY2hlLmtleXMoKSkuZmlsdGVyKFxuICAgICAgKGtleSkgPT4ga2V5LmluY2x1ZGVzKHBhdHRlcm5TdHIuc2xpY2UoMSwgLTEpKSwgLy8gUmVtb3ZlIG91dGVyIGJyYWNlc1xuICAgIClcblxuICAgIGtleXNUb0RlbGV0ZS5mb3JFYWNoKChrZXkpID0+IHRoaXMuY2FjaGUuZGVsZXRlKGtleSkpXG4gIH1cblxuICAvLyBDbGVhciBhbGwgY2FjaGVcbiAgY2xlYXIoKTogdm9pZCB7XG4gICAgdGhpcy5jYWNoZS5jbGVhcigpXG4gIH1cblxuICAvLyBHZXQgY2FjaGUgc3RhdHNcbiAgZ2V0U3RhdHMoKTogeyBzaXplOiBudW1iZXI7IGVudHJpZXM6IHN0cmluZ1tdIH0ge1xuICAgIHJldHVybiB7XG4gICAgICBzaXplOiB0aGlzLmNhY2hlLnNpemUsXG4gICAgICBlbnRyaWVzOiBBcnJheS5mcm9tKHRoaXMuY2FjaGUua2V5cygpKSxcbiAgICB9XG4gIH1cblxuICAvLyBDbGVhbiBleHBpcmVkIGVudHJpZXNcbiAgY2xlYW51cCgpOiB2b2lkIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpXG4gICAgZm9yIChjb25zdCBba2V5LCBlbnRyeV0gb2YgdGhpcy5jYWNoZS5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChub3cgLSBlbnRyeS50aW1lc3RhbXAgPiBlbnRyeS50dGwpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5kZWxldGUoa2V5KVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBTaW5nbGV0b24gaW5zdGFuY2VcbmV4cG9ydCBjb25zdCBhcGlDYWNoZSA9IG5ldyBBcGlDYWNoZSgpXG5cbi8vIEF1dG8tY2xlYW51cCBldmVyeSA1IG1pbnV0ZXNcbmlmICh0eXBlb2Ygc2V0SW50ZXJ2YWwgIT09ICd1bmRlZmluZWQnKSB7XG4gIHNldEludGVydmFsKFxuICAgICgpID0+IHtcbiAgICAgIGFwaUNhY2hlLmNsZWFudXAoKVxuICAgIH0sXG4gICAgNSAqIDYwICogMTAwMCxcbiAgKVxufVxuIl0sIm5hbWVzIjpbIkFwaUNhY2hlIiwiZ2VuZXJhdGVLZXkiLCJwYXJhbXMiLCJzb3J0ZWRQYXJhbXMiLCJPYmplY3QiLCJrZXlzIiwic29ydCIsInJlZHVjZSIsImFjYyIsImtleSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpc0V4cGlyZWQiLCJlbnRyeSIsIkRhdGUiLCJub3ciLCJ0aW1lc3RhbXAiLCJ0dGwiLCJnZXQiLCJjYWNoZSIsImRlbGV0ZSIsImRhdGEiLCJzZXQiLCJjdXN0b21UdGwiLCJERUZBVUxUX1RUTCIsImludmFsaWRhdGVQYXR0ZXJuIiwicGF0dGVybiIsInBhdHRlcm5TdHIiLCJrZXlzVG9EZWxldGUiLCJBcnJheSIsImZyb20iLCJmaWx0ZXIiLCJpbmNsdWRlcyIsInNsaWNlIiwiZm9yRWFjaCIsImNsZWFyIiwiZ2V0U3RhdHMiLCJzaXplIiwiZW50cmllcyIsImNsZWFudXAiLCJNYXAiLCJhcGlDYWNoZSIsInNldEludGVydmFsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/api-cache.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbConfigured: () => (/* binding */ dbConfigured),\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Prefer pooled connection in production; support common provider env names\nconst connectionString = process.env.DATABASE_URL || process.env.DATABASE_POOLING_URL || undefined;\n// Export a flag for external checks\nconst dbConfigured = Boolean(connectionString);\n// Emit non-sensitive diagnostics to verify env resolution\nif (dbConfigured) {\n    try {\n        const { hostname } = new URL(connectionString);\n        console.log(`[db] Using database host: ${hostname}`);\n    } catch  {\n        console.log('[db] Database URL detected');\n    }\n} else {\n    console.warn('[db] No database URL configured');\n}\nconst isLocal = !!connectionString && (connectionString.includes('localhost') || connectionString.includes('127.0.0.1'));\n// Create a pool only when configured; otherwise operate in a disabled mode\nconst pool = connectionString ? new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n    connectionString,\n    // Supabase requires SSL; disable for local\n    ssl: isLocal ? undefined : {\n        rejectUnauthorized: false\n    }\n}) : null;\nasync function query(text, params) {\n    let client = null;\n    try {\n        if (!pool) {\n            console.warn('[db] No database connection configured. Returning empty rows. Set POSTGRES_URL or POSTGRES_URL_NON_POOLING in the environment.');\n            return {\n                rows: []\n            };\n        }\n        client = await pool.connect();\n        const result = await client.query(text, params);\n        return {\n            rows: result.rows\n        };\n    } catch (error) {\n        // If the database is not available, avoid crashing the request\n        console.warn('[db] Query failed; returning empty rows. DB is disabled or unreachable.', error);\n        return {\n            rows: []\n        };\n    } finally{\n        if (client) client.release();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RiLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBeUI7QUFFekIsNEVBQTRFO0FBQzVFLE1BQU1DLG1CQUNKQyxRQUFRQyxHQUFHLENBQUNDLFlBQVksSUFBSUYsUUFBUUMsR0FBRyxDQUFDRSxvQkFBb0IsSUFBSUM7QUFFbEUsb0NBQW9DO0FBQzdCLE1BQU1DLGVBQWVDLFFBQVFQLGtCQUFpQjtBQUVyRCwwREFBMEQ7QUFDMUQsSUFBSU0sY0FBYztJQUNoQixJQUFJO1FBQ0YsTUFBTSxFQUFFRSxRQUFRLEVBQUUsR0FBRyxJQUFJQyxJQUFJVDtRQUM3QlUsUUFBUUMsR0FBRyxDQUFDLENBQUMsMEJBQTBCLEVBQUVILFVBQVU7SUFDckQsRUFBRSxPQUFNO1FBQ05FLFFBQVFDLEdBQUcsQ0FBQztJQUNkO0FBQ0YsT0FBTztJQUNMRCxRQUFRRSxJQUFJLENBQUM7QUFDZjtBQUVBLE1BQU1DLFVBQ0osQ0FBQyxDQUFDYixvQkFDREEsQ0FBQUEsaUJBQWlCYyxRQUFRLENBQUMsZ0JBQ3pCZCxpQkFBaUJjLFFBQVEsQ0FBQyxZQUFXO0FBRXpDLDJFQUEyRTtBQUNwRSxNQUFNQyxPQUFpQ2YsbUJBQzFDLElBQUlELG9DQUFJQSxDQUFDO0lBQ1BDO0lBQ0EsMkNBQTJDO0lBQzNDZ0IsS0FBS0gsVUFBVVIsWUFBWTtRQUFFWSxvQkFBb0I7SUFBTTtBQUN6RCxLQUNBLEtBQUk7QUFZRCxlQUFlQyxNQUNwQkMsSUFBWSxFQUNaQyxNQUFtQjtJQUVuQixJQUFJQyxTQUF5QztJQUM3QyxJQUFJO1FBQ0YsSUFBSSxDQUFDTixNQUFNO1lBQ1RMLFFBQVFFLElBQUksQ0FDVjtZQUVGLE9BQU87Z0JBQUVVLE1BQU0sRUFBRTtZQUFRO1FBQzNCO1FBQ0FELFNBQVMsTUFBTU4sS0FBS1EsT0FBTztRQUMzQixNQUFNQyxTQUFTLE1BQU1ILE9BQU9ILEtBQUssQ0FBQ0MsTUFBTUM7UUFDeEMsT0FBTztZQUFFRSxNQUFNRSxPQUFPRixJQUFJO1FBQVE7SUFDcEMsRUFBRSxPQUFPRyxPQUFPO1FBQ2QsK0RBQStEO1FBQy9EZixRQUFRRSxJQUFJLENBQ1YsMkVBQ0FhO1FBRUYsT0FBTztZQUFFSCxNQUFNLEVBQUU7UUFBUTtJQUMzQixTQUFVO1FBQ1IsSUFBSUQsUUFBUUEsT0FBT0ssT0FBTztJQUM1QjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXN0aWFud2FuZy9EZXNrdG9wL2FsbHZpdHIvaHVnaW4vc3JjL2xpYi9kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb29sIH0gZnJvbSAncGcnXG5cbi8vIFByZWZlciBwb29sZWQgY29ubmVjdGlvbiBpbiBwcm9kdWN0aW9uOyBzdXBwb3J0IGNvbW1vbiBwcm92aWRlciBlbnYgbmFtZXNcbmNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPVxuICBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwgfHwgcHJvY2Vzcy5lbnYuREFUQUJBU0VfUE9PTElOR19VUkwgfHwgdW5kZWZpbmVkXG5cbi8vIEV4cG9ydCBhIGZsYWcgZm9yIGV4dGVybmFsIGNoZWNrc1xuZXhwb3J0IGNvbnN0IGRiQ29uZmlndXJlZCA9IEJvb2xlYW4oY29ubmVjdGlvblN0cmluZylcblxuLy8gRW1pdCBub24tc2Vuc2l0aXZlIGRpYWdub3N0aWNzIHRvIHZlcmlmeSBlbnYgcmVzb2x1dGlvblxuaWYgKGRiQ29uZmlndXJlZCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaG9zdG5hbWUgfSA9IG5ldyBVUkwoY29ubmVjdGlvblN0cmluZyBhcyBzdHJpbmcpXG4gICAgY29uc29sZS5sb2coYFtkYl0gVXNpbmcgZGF0YWJhc2UgaG9zdDogJHtob3N0bmFtZX1gKVxuICB9IGNhdGNoIHtcbiAgICBjb25zb2xlLmxvZygnW2RiXSBEYXRhYmFzZSBVUkwgZGV0ZWN0ZWQnKVxuICB9XG59IGVsc2Uge1xuICBjb25zb2xlLndhcm4oJ1tkYl0gTm8gZGF0YWJhc2UgVVJMIGNvbmZpZ3VyZWQnKVxufVxuXG5jb25zdCBpc0xvY2FsID1cbiAgISFjb25uZWN0aW9uU3RyaW5nICYmXG4gIChjb25uZWN0aW9uU3RyaW5nLmluY2x1ZGVzKCdsb2NhbGhvc3QnKSB8fFxuICAgIGNvbm5lY3Rpb25TdHJpbmcuaW5jbHVkZXMoJzEyNy4wLjAuMScpKVxuXG4vLyBDcmVhdGUgYSBwb29sIG9ubHkgd2hlbiBjb25maWd1cmVkOyBvdGhlcndpc2Ugb3BlcmF0ZSBpbiBhIGRpc2FibGVkIG1vZGVcbmV4cG9ydCBjb25zdCBwb29sOiBpbXBvcnQoJ3BnJykuUG9vbCB8IG51bGwgPSBjb25uZWN0aW9uU3RyaW5nXG4gID8gbmV3IFBvb2woe1xuICAgICAgY29ubmVjdGlvblN0cmluZyxcbiAgICAgIC8vIFN1cGFiYXNlIHJlcXVpcmVzIFNTTDsgZGlzYWJsZSBmb3IgbG9jYWxcbiAgICAgIHNzbDogaXNMb2NhbCA/IHVuZGVmaW5lZCA6IHsgcmVqZWN0VW5hdXRob3JpemVkOiBmYWxzZSB9LFxuICAgIH0pXG4gIDogbnVsbFxuXG5leHBvcnQgdHlwZSBTcWxQYXJhbSA9XG4gIHwgc3RyaW5nXG4gIHwgbnVtYmVyXG4gIHwgYm9vbGVhblxuICB8IG51bGxcbiAgfCBEYXRlXG4gIHwgQnVmZmVyXG4gIHwgc3RyaW5nW11cbiAgfCBudW1iZXJbXVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcXVlcnk8VCA9IHVua25vd24+KFxuICB0ZXh0OiBzdHJpbmcsXG4gIHBhcmFtcz86IFNxbFBhcmFtW10sXG4pOiBQcm9taXNlPHsgcm93czogVFtdIH0+IHtcbiAgbGV0IGNsaWVudDogaW1wb3J0KCdwZycpLlBvb2xDbGllbnQgfCBudWxsID0gbnVsbFxuICB0cnkge1xuICAgIGlmICghcG9vbCkge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAnW2RiXSBObyBkYXRhYmFzZSBjb25uZWN0aW9uIGNvbmZpZ3VyZWQuIFJldHVybmluZyBlbXB0eSByb3dzLiBTZXQgUE9TVEdSRVNfVVJMIG9yIFBPU1RHUkVTX1VSTF9OT05fUE9PTElORyBpbiB0aGUgZW52aXJvbm1lbnQuJyxcbiAgICAgIClcbiAgICAgIHJldHVybiB7IHJvd3M6IFtdIGFzIFRbXSB9XG4gICAgfVxuICAgIGNsaWVudCA9IGF3YWl0IHBvb2wuY29ubmVjdCgpXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50LnF1ZXJ5KHRleHQsIHBhcmFtcylcbiAgICByZXR1cm4geyByb3dzOiByZXN1bHQucm93cyBhcyBUW10gfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIElmIHRoZSBkYXRhYmFzZSBpcyBub3QgYXZhaWxhYmxlLCBhdm9pZCBjcmFzaGluZyB0aGUgcmVxdWVzdFxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdbZGJdIFF1ZXJ5IGZhaWxlZDsgcmV0dXJuaW5nIGVtcHR5IHJvd3MuIERCIGlzIGRpc2FibGVkIG9yIHVucmVhY2hhYmxlLicsXG4gICAgICBlcnJvcixcbiAgICApXG4gICAgcmV0dXJuIHsgcm93czogW10gYXMgVFtdIH1cbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAoY2xpZW50KSBjbGllbnQucmVsZWFzZSgpXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJQb29sIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJEQVRBQkFTRV9QT09MSU5HX1VSTCIsInVuZGVmaW5lZCIsImRiQ29uZmlndXJlZCIsIkJvb2xlYW4iLCJob3N0bmFtZSIsIlVSTCIsImNvbnNvbGUiLCJsb2ciLCJ3YXJuIiwiaXNMb2NhbCIsImluY2x1ZGVzIiwicG9vbCIsInNzbCIsInJlamVjdFVuYXV0aG9yaXplZCIsInF1ZXJ5IiwidGV4dCIsInBhcmFtcyIsImNsaWVudCIsInJvd3MiLCJjb25uZWN0IiwicmVzdWx0IiwiZXJyb3IiLCJyZWxlYXNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.4.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbusinesses%2Froute&page=%2Fapi%2Fbusinesses%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbusinesses%2Froute.ts&appDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristianwang%2FDesktop%2Fallvitr%2Fhugin&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=fra1&preferredRegion=arn1&preferredRegion=cdg1&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();